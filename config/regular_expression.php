<?php
$config = [0 =>
               array(
                   'function' => '数字',
                   'pattern' => '^[0-9]*$',
               ),
           1 =>
               array(
                   'function' => 'n位的数字',
                   'pattern' => '^\\d{n}$',
               ),
           2 =>
               array(
                   'function' => '至少n位的数字',
                   'pattern' => '^\\d{n,}$',
               ),
           3 =>
               array(
                   'function' => 'm-n位的数字',
                   'pattern' => '^\\d{m,n}$',
               ),
           4 =>
               array(
                   'function' => '零和非零开头的数字',
                   'pattern' => '^(0|[1-9][0-9]*)$',
               ),
           5 =>
               array(
                   'function' => '非零开头的最多带两位小数的数字',
                   'pattern' => '^([1-9][0-9]*)+(.[0-9]{1,2})?$',
               ),
           6 =>
               array(
                   'function' => '带1-2位小数的正数或负数',
                   'pattern' => '^(\\-)?\\d+(\\.\\d{1,2})?$',
               ),
           7 =>
               array(
                   'function' => '正数、负数、和小数',
                   'pattern' => '^(\\-|\\+)?\\d+(\\.\\d+)?$',
               ),
           8 =>
               array(
                   'function' => '有两位小数的正实数',
                   'pattern' => '^[0-9]+(.[0-9]{2})?$',
               ),
           9 =>
               array(
                   'function' => '有1~3位小数的正实数',
                   'pattern' => '^[0-9]+(.[0-9]{1,3})?$',
               ),
           10 =>
               array(
                   'function' => '非零的正整数',
                   'pattern' => '^[1-9]\\d*$ 或 ^([1-9][0-9]*){1,3}$ 或 ^\\+?[1-9][0-9]*$',
               ),
           11 =>
               array(
                   'function' => '非零的负整数',
                   'pattern' => '^\\-[1-9][]0-9"*$ 或 ^-[1-9]\\d*$',
               ),
           12 =>
               array(
                   'function' => '非负整数',
                   'pattern' => '^\\d+$ 或 ^[1-9]\\d*|0$',
               ),
           13 =>
               array(
                   'function' => '非正整数',
                   'pattern' => '^-[1-9]\\d*|0$ 或 ^((-\\d+)|(0+))$',
               ),
           14 =>
               array(
                   'function' => '非负浮点数',
                   'pattern' => '^\\d+(\\.\\d+)?$ 或 ^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0$',
               ),
           15 =>
               array(
                   'function' => '非正浮点数',
                   'pattern' => '^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$ 或 ^(-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*))|0?\\.0+|0$',
               ),
           16 =>
               array(
                   'function' => '正浮点数',
                   'pattern' => '^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*$ 或 ^(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*))$',
               ),
           17 =>
               array(
                   'function' => '负浮点数',
                   'pattern' => '^-([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*)$ 或 ^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$',
               ),
           18 =>
               array(
                   'function' => '浮点数',
                   'pattern' => '^(-?\\d+)(\\.\\d+)?$ 或 ^-?([1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*|0?\\.0+|0)$',
               ),
           19 =>
               array(
                   'function' => '汉字',
                   'pattern' => '^[\\u4e00-\\u9fa5]{0,}$',
               ),
           20 =>
               array(
                   'function' => '英文和数字',
                   'pattern' => '^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$',
               ),
           21 =>
               array(
                   'function' => '长度为3-20的所有字符',
                   'pattern' => '^.{3,20}$',
               ),
           22 =>
               array(
                   'function' => '由26个英文字母组成的字符串',
                   'pattern' => '^[A-Za-z]+$',
               ),
           23 =>
               array(
                   'function' => '由26个大写英文字母组成的字符串',
                   'pattern' => '^[A-Z]+$',
               ),
           24 =>
               array(
                   'function' => '由26个小写英文字母组成的字符串',
                   'pattern' => '^[a-z]+$',
               ),
           25 =>
               array(
                   'function' => '由数字和26个英文字母组成的字符串',
                   'pattern' => '^[A-Za-z0-9]+$',
               ),
           26 =>
               array(
                   'function' => '由数字、26个英文字母或者下划线组成的字符串',
                   'pattern' => '^\\w+$ 或 ^\\w{3,20}$',
               ),
           27 =>
               array(
                   'function' => '中文、英文、数字包括下划线',
                   'pattern' => '^[\\u4E00-\\u9FA5A-Za-z0-9_]+$',
               ),
           28 =>
               array(
                   'function' => '中文、英文、数字但不包括下划线等符号',
                   'pattern' => '^[\\u4E00-\\u9FA5A-Za-z0-9]+$ 或 ^[\\u4E00-\\u9FA5A-Za-z0-9]{2,20}$',
               ),
           29 =>
               array(
                   'function' => '禁止输入含有~的字符',
                   'pattern' => '[^~\\x22]+',
               ),
           30 =>
               array(
                   'function' => 'Email地址',
                   'pattern' => '^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$',
               ),
           31 =>
               array(
                   'function' => '域名',
                   'pattern' => '[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?',
               ),
           32 =>
               array(
                   'function' => 'InternetURL',
                   'pattern' => '[a-zA-z]+://[^\\s]* 或 ^http://([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&=]*)?$',
               ),
           33 =>
               array(
                   'function' => '手机号码',
                   'pattern' => '^(13[0-9]|14[0-9]|15[0-9]|16[0-9]|17[0-9]|18[0-9]|19[0-9])\\d{8}$ (由于工信部放号段不定时，所以建议使用泛解析 ^([1][3,4,5,6,7,8,9])\\d{9}$)',
               ),
           34 =>
               array(
                   'function' => '电话号码("XXX-XXXXXXX"、"XXXX-XXXXXXXX"、"XXX-XXXXXXX"、"XXX-XXXXXXXX"、"XXXXXXX"和"XXXXXXXX)',
                   'pattern' => '^(\\(\\d{3,4}-)|\\d{3.4}-)?\\d{7,8}$',
               ),
           35 =>
               array(
                   'function' => '国内电话号码(0511-4405222、021-87888822)',
                   'pattern' => '\\d{3}-\\d{8}|\\d{4}-\\d{7}',
               ),
           36 =>
               array(
                   'function' => '18位身份证号码(数字、字母x结尾)',
                   'pattern' => '^((\\d{18})|([0-9x]{18})|([0-9X]{18}))$',
               ),
           37 =>
               array(
                   'function' => '帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)',
                   'pattern' => '^[a-zA-Z][a-zA-Z0-9_]{4,15}$',
               ),
           38 =>
               array(
                   'function' => '密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)',
                   'pattern' => '^[a-zA-Z]\\w{5,17}$',
               ),
           39 =>
               array(
                   'function' => '强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)',
                   'pattern' => '^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$',
               ),
           40 =>
               array(
                   'function' => '日期格式',
                   'pattern' => '^\\d{4}-\\d{1,2}-\\d{1,2}',
               ),
           41 =>
               array(
                   'function' => '一年的12个月(01～09和1～12)',
                   'pattern' => '^(0?[1-9]|1[0-2])$',
               ),
           42 =>
               array(
                   'function' => '一个月的31天(01～09和1～31)',
                   'pattern' => '^((0?[1-9])|((1|2)[0-9])|30|31)$',
               ),
           43 =>
               array(
                   'function' => '钱的输入格式',
                   'pattern' => '',
               ),
           44 =>
               array(
                   'function' => '1.有四种钱的表示形式我们可以接受:"10000.00" 和 "10,000.00", 和没有 "分" 的 "10000" 和 "10,000"',
                   'pattern' => '^[1-9][0-9]*$',
               ),
           45 =>
               array(
                   'function' => '2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符"0"不通过,所以我们采用下面的形式',
                   'pattern' => '^(0|[1-9][0-9]*)$',
               ),
           46 =>
               array(
                   'function' => '3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号',
                   'pattern' => '^(0|-?[1-9][0-9]*)$',
               ),
           47 =>
               array(
                   'function' => '4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分',
                   'pattern' => '^[0-9]+(.[0-9]+)?$',
               ),
           48 =>
               array(
                   'function' => '5.必须说明的是,小数点后面至少应该有1位数,所以"10."是不通过的,但是 "10" 和 "10.2" 是通过的',
                   'pattern' => '^[0-9]+(.[0-9]{2})?$',
               ),
           49 =>
               array(
                   'function' => '6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样',
                   'pattern' => '^[0-9]+(.[0-9]{1,2})?$',
               ),
           50 =>
               array(
                   'function' => '7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样',
                   'pattern' => '^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$',
               ),
           51 =>
               array(
                   'function' => '8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须',
                   'pattern' => '^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$',
               ),
           52 =>
               array(
                   'function' => '备注',
                   'pattern' => '这就是最终结果了,别忘了"+"可以用"*"替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里',
               ),
           53 =>
               array(
                   'function' => 'xml文件',
                   'pattern' => '^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$',
               ),
           54 =>
               array(
                   'function' => '中文字符的正则表达式',
                   'pattern' => '[\\u4e00-\\u9fa5]',
               ),
           55 =>
               array(
                   'function' => '双字节字符',
                   'pattern' => '[^\\x00-\\xff]    (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))',
               ),
           56 =>
               array(
                   'function' => '空白行的正则表达式',
                   'pattern' => '\\n\\s*\\r    (可以用来删除空白行)',
               ),
           57 =>
               array(
                   'function' => 'HTML标记的正则表达式',
                   'pattern' => '<(\\S*?)[^>]*>.*?|<.*? />    (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)',
               ),
           58 =>
               array(
                   'function' => '首尾空白字符的正则表达式',
                   'pattern' => '^\\s*|\\s*$或(^\\s*)|(\\s*$)    (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)',
               ),
           59 =>
               array(
                   'function' => '腾讯QQ号',
                   'pattern' => '[1-9][0-9]{4,}    (腾讯QQ号从10000开始)',
               ),
           60 =>
               array(
                   'function' => '中国邮政编码',
                   'pattern' => '[1-9]\\d{5}(?!\\d)    (中国邮政编码为6位数字)',
               ),
           61 =>
               array(
                   'function' => 'IP地址',
                   'pattern' => '\\d+\\.\\d+\\.\\d+\\.\\d+    (提取IP地址时有用)',
               ),
           62 =>
               array(
                   'function' => 'IP地址',
                   'pattern' => '((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))',
               ),
           [
               'pattern' => "/[^(\\x{4e00}-\\x{9fa5}\w)]/u",
               'function' => "匹配特殊字符(非中文英文字母下划线数字)"
           ]
];


return $config;

//    [
//        'pattern' => "/[(\\x{4e00}-\\x{9fa5})]/u",
//        'function' => "中文字符编码utf8"
//    ], [
//        'pattern' => "/[^(\\x{4e00}-\\x{9fa5}\w)]/u",
//        'function' => "匹配特殊字符(非中文英文字母下划线数字)"
//    ]